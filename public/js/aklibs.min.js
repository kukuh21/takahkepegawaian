! function (e) {
    var t = {};

    function i(o) {
        if (t[o]) return t[o].exports;
        var n = t[o] = {
            i: o,
            l: !1,
            exports: {}
        };
        return e[o].call(n.exports, n, n.exports, i), n.l = !0, n.exports
    }
    i.m = e, i.c = t, i.d = function (e, t, o) {
        i.o(e, t) || Object.defineProperty(e, t, {
            configurable: !1,
            enumerable: !0,
            get: o
        })
    }, i.n = function (e) {
        var t = e && e.__esModule ? function () {
            return e.default
        } : function () {
            return e
        };
        return i.d(t, "a", t), t
    }, i.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, i.p = "", i(i.s = 0)
}([function (e, t, i) {
    i(1), e.exports = i(11)
}, function (e, t, i) {
    i(2);
    var o = i(3),
        n = i(4),
        r = i(5),
        a = i(6),
        s = (i(7), {
            open: a
        }),
        l = {
            init: function () {
                return window.AKForm = o, window.AKHelper = n, window.AKCropit = r, window.AKModal = s, this
            },
            version: function () {
                return "AKLibs v1.0.0"
            }
        };
    window.AKLibs = l.init()
}, function (e, t) {
    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        o = {
            init: function () {
                window.AKToast = o, iziToast.settings({
                    theme: "dark"
                })
            },
            confirm: function (e) {
                var t = {
                    pesan: "Apakah anda yakin ?",
                    class: "aktoast-confirm",
                    buttons: [{
                        text: "<button><b>OKE</b></button>",
                        onpress: function () {}
                    }, {
                        text: "<button>BATAL</button>",
                        onpress: function () {}
                    }]
                };
                $.extend(!0, t, e);
                var i = [];
                t.buttons.forEach(function (e) {
                    i.push([e.text, function (t, i) {
                        var o = function () {
                            return t.hide({
                                transitionOut: "fadeOut"
                            }, i, "button")
                        };
                        !1 !== e.autoHide && o(), e.onpress && e.onpress(o, t, i)
                    }])
                }), iziToast.show({
                    class: t.class,
                    timeout: !1,
                    close: !1,
                    overlay: !0,
                    position: "center",
                    layout: 4,
                    title: '<i class="fa fa-question-circle"></i> &nbsp; Konfirmasi',
                    zindex: 1058,
                    message: t.pesan,
                    buttons: i
                })
            },
            success: function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3,
                    i = o._randomId(),
                    n = o._parseTeks(e, {
                        title: "Pemberitahuan",
                        message: "Ini Sukses",
                        icon: "fa fa-bell",
                        progressBarColor: "rgb(0, 255, 184)",
                        timeout: t,
                        close: !1 !== t
                    });
                return n.class = "aktoast-success" + n.class, n.id && 0 != n.id.length || (n.id = "ak_toast_" + i), iziToast.show(n), {
                    id: i,
                    close: function () {
                        o.close(i)
                    }
                }
            },
            info: function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3,
                    i = o._randomId(),
                    n = o._parseTeks(e, {
                        title: "Informasi",
                        message: "Ini Informasi",
                        icon: "fa fa-bell",
                        progressBarColor: "rgb(39, 105, 226)",
                        timeout: t,
                        close: !1 !== t
                    });
                return n.class = "aktoast-info" + n.class, n.id && 0 != n.id.length || (n.id = "ak_toast_" + i), iziToast.show(n), {
                    id: i,
                    close: function () {
                        o.close(i)
                    }
                }
            },
            error: function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3,
                    i = o._randomId(),
                    n = o._parseTeks(e, {
                        title: "Terjadi Kesalahan",
                        message: "Terjadi kesalahan",
                        icon: "fa fa-exclamation-triangle",
                        progressBarColor: "#565656",
                        timeout: t,
                        close: !1 !== t
                    });
                return n.class = "aktoast-error" + n.class, n.id && 0 != n.id.length || (n.id = "ak_toast_" + i), iziToast.show(n), {
                    id: i,
                    close: function () {
                        o.close(i)
                    }
                }
            },
            loading: function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "fa-bell",
                    r = {
                        title: "Mohon Tunggu",
                        message: "Sedang Loading"
                    },
                    a = t || o._randomId();
                return "object" == (void 0 === e ? "undefined" : i(e)) ? (r.message = e.message, r.title = e.title) : r.message = e, iziToast.show({
                    id: "ak_toast_" + a,
                    class: "aktoast-loading",
                    layout: 2,
                    zindex: 1058,
                    close: !1,
                    timeout: !1,
                    position: "center",
                    icon: "fa " + n,
                    title: r.title,
                    message: r.message,
                    progressBarColor: "#565656",
                    overlay: !0
                }), {
                    id: a,
                    close: function () {
                        o.close(a)
                    }
                }
            },
            close: function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = "#ak_toast_",
                    n = i + e;
                "." == e[0] && (i = "." + i.substring(1), n = i + e.substring(1)), setTimeout(function () {
                    $(n).length > 0 && iziToast.hide(t, document.querySelector(n)), setTimeout(function () {
                        $(n).length > 0 && o.close(e, t)
                    }, 1200)
                }, 600)
            },
            _randomId: function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 99;
                return Math.floor(Math.random() * e) + "" + Math.floor(Math.random() * e)
            },
            _parseTeks: function (e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    o = {
                        title: "AKToast Judul",
                        message: "AKToast Pesan",
                        id: null,
                        class: "",
                        icon: "fa fa-bookmark",
                        zindex: 1058,
                        layout: 2,
                        timeout: 5e3
                    };
                return $.extend(!0, o, t), "object" == (void 0 === e ? "undefined" : i(e)) ? $.extend(!0, o, e) : o.message = e, o.id && (o.id = "ak_toast_" + o.id), o.class && o.class.length > 0 && (o.class = " ak_toast_" + o.class), o
            }
        };
    void 0 != window.iziToast && o.init()
}, function (e, t) {
    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        o = function () {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var o = t[i];
                    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
                }
            }
            return function (t, i, o) {
                return i && e(t.prototype, i), o && e(t, o), t
            }
        }();
    var n = function () {
        function e(t) {
            var o = this,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), void 0 == $ || void 0 == $.fn.ajaxForm || void 0 == $.fn.parsley) throw new Error("AKForm memerlukan jQuery, Jquery Form dan Parsley.");
            if (this.error_name = "akform-error", this.optParsley = {
                    inputs: "input, textarea, select",
                    excluded: "input[type=button], input[type=submit], input[type=reset], input[type=hidden], [data-parsley-ignore]",
                    errorClass: "is-invalid",
                    successClass: "is-valid",
                    errorsWrapper: '<div class="invalid-feedback fade"></div>',
                    errorTemplate: '<div class="akform-error"></div>',
                    classHandler: function (e) {
                        return $(e.element).parents(".form-group")
                    },
                    errorsContainer: function (e) {
                        return e.$element.hasClass("select2-hidden-accessible") ? e.$element.parent() : e
                    }
                }, this.optForm = {
                    success: function (e) {
                        e.success && alert("Sukses")
                    }
                }, n.parsley && $.extend(!0, this.optParsley, n.parsley), n.form && $.extend(!0, this.optForm, n.form), this.optForm.error && "object" == i(this.optForm.error) && (this.optForm.error.after || this.optForm.error.before)) {
                var r = this.optForm.error;
                this.optForm.error = function (t) {
                    var i = e.parseXhr(t);
                    r.before && r.before(i), o.parseError(t), r.after && r.after(i)
                }
            }
            this.options = n, this.selector = t, this.$selector = $(this.selector), this._addTrigger(), this.pform = this.$selector.parsley(this.optParsley), this.aform = this.$selector.ajaxForm(this.optForm), this._listenEvent()
        }
        return o(e, [{
            key: "_addTrigger",
            value: function () {
                this.$selector.find(this.optParsley.inputs).not(this.optParsley.excluded).each(function (e, t) {
                    $(t).attr("data-parsley-trigger", "focusout")
                })
            }
        }, {
            key: "_listenEvent",
            value: function () {
                var e = this;
                this.pform.on("form:validate", function () {
                    e.reset()
                }), this.options.submitBtn && $(this.options.submitBtn).on("click", function (t) {
                    e.submit()
                })
            }
        }, {
            key: "addError",
            value: function (e, t) {
                var i = this.$selector.find('[name="' + e + '"]');
                (0 == i.length && (i = this.$selector.find('[name="' + e + '[]"]')), 0 != i.length) && i.eq(0).parsley().addError(this.error_name, {
                    message: t[0],
                    assert: !0
                })
            }
        }, {
            key: "parseError",
            value: function (e) {
                e.responseText && e.responseJSON && e.responseJSON.errors && (e = e.responseJSON.errors), $.each(e, this.addError.bind(this))
            }
        }, {
            key: "submit",
            value: function () {
                this.pform.validate(), this.pform.isValid() && this.$selector.submit()
            }
        }, {
            key: "reset",
            value: function () {
                var e = this;
                this.pform.fields.forEach(function (t) {
                    return t.removeError(e.error_name)
                }), this.pform.reset()
            }
        }, {
            key: "parsleyReinit",
            value: function () {
                var e = [];
                this.pform.fields.forEach(function (t) {
                    return t._ui ? e.push(t.element) : null
                }), this.pform.destroy(), this._addTrigger(), this.pform = this.$selector.parsley(this.optParsley), this.pform.fields.forEach(function (t) {
                    return e.forEach(function (e) {
                        return t.element == e ? t.validate() : null
                    })
                })
            }
        }, {
            key: "closeModal",
            value: function () {
                var e = this.$selector.parents(".modal");
                e.length > 0 && e.modal("hide")
            }
        }], [{
            key: "parseXhr",
            value: function (e) {
                var t = {
                    xhr: e,
                    json: {},
                    pesanToast: {}
                };
                return e.responseJSON && (t.json = e.responseJSON, t.json.pesan && (t.pesanToast.message = t.json.pesan)), t
            }
        }, {
            key: "ignoreSummernote",
            value: function (e) {
                return e.parent().find(".note-editor").find("input, textarea, select").attr("data-parsley-ignore", "")
            }
        }]), e
    }();
    e.exports = n
}, function (e, t) {
    var i = function () {
        function e(e, t) {
            for (var i = 0; i < t.length; i++) {
                var o = t[i];
                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
            }
        }
        return function (t, i, o) {
            return i && e(t.prototype, i), o && e(t, o), t
        }
    }();
    var o = function () {
        function e() {
            ! function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e)
        }
        return i(e, null, [{
            key: "capitalize",
            value: function (e) {
                var t = e.split("_");
                return t.forEach(function (e, i) {
                    e = e[0].toUpperCase() + e.substring(1), t[i] = e
                }), t.join(" ")
            }
        }, {
            key: "ajaxDelete",
            value: function (e) {
                var t = {
                    data: {
                        _method: "DELETE",
                        _token: document.head.querySelector('meta[name="csrf-token"]').content
                    },
                    done: function (e) {},
                    beforePost: function () {},
                    onFail: function (e) {}
                };
                $.extend(!0, t, e), t.beforePost(), $.post(t.url, t.data).done(t.done).fail(function (e) {
                    if (t.onFail(e), t.fail) return t.fail(e);
                    e.responseJSON && e.responseJSON.pesan ? iziToast ? AKToast.error(e.responseJSON.pesan) : alert(e.responseJSON.pesan) : iziToast ? AKToast.error("Terjadi kesalahan, silahkan coba lagi.") : alert("Terjadi kesalahan, silahkan coba lagi.")
                })
            }
        }, {
            key: "ajaxPost",
            value: function (e) {
                var t = {
                    data: {
                        _method: "POST",
                        _token: document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                    },
                    done: function (e) {

                    },
                    beforePost: function () {},
                    onFail: function (e) {
                    }
                };
                $.extend(!0, t, e), t.beforePost(), $.post(t.url, t.data).done(t.done).fail(function (e) {
                    if (t.onFail(e), t.fail) return t.fail(e);
                    e.responseJSON && e.responseJSON.pesan ? iziToast ? AKToast.error(e.responseJSON.pesan) : alert(e.responseJSON.pesan) : iziToast ? AKToast.error("Terjadi kesalahan, silahkan coba lagi.") : alert("Terjadi kesalahan, silahkan coba lagi.")
                })
            }
        }]), e
    }();
    e.exports = o
}, function (e, t) {
    var i = function () {
        function e(e, t) {
            for (var i = 0; i < t.length; i++) {
                var o = t[i];
                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
            }
        }
        return function (t, i, o) {
            return i && e(t.prototype, i), o && e(t, o), t
        }
    }();
    var o = function () {
        function e(t) {
            var i = this,
                o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), void 0 == $ || void 0 == $.fn.cropit) throw new Error("AKCropit memerlukan jQuery dan Cropit");
            this.selector = t, this.$selector = $(this.selector), this.options = {
                makeElement: !0,
                responsive: {},
                teksPilih: "Pilih Gambar",
                cropit: {
                    onFileReaderError: function () {
                        AKToast.error("Gagal meload gambar atau file terpilih bukan berupa gambar")
                    },
                    onImageError: function (e) {
                        var t = "Cropit: onImageError",
                            o = i.$selector.find(".cropit-preview-image-container");
                        switch (e.code) {
                            case 0:
                                t = "Gambar terpilih gagal diload";
                                break;
                            case 1:
                                t = "Ukuran gambar terlalu kecil, minimal " + o.outerWidth() + " x " + o.outerHeight()
                        }
                        AKToast.error(t)
                    }
                }
            }, $.extend(!0, this.options, o), this.parseResponsiveBreakpoint(), this.options.makeElement && this.generateInputElement(), this.cropit = this.$selector.cropit(this.options.cropit), this._currentSize = {
                width: this.options.width,
                height: this.options.height
            }, this.updatePreview(), this.listenBtnPilih(), Object.keys(this.options.responsive).length > 0 && this.listenResponsive()
        }
        return i(e, [{
            key: "generateInputElement",
            value: function () {
                var e = this.$selector;
                this.$selector.addClass("ak-cropit"), this.$selector.append('\n    <div class="cropit-preview"></div>\n    <input \n      type="file" \n      id="akcropit-ifile" \n      class="cropit-image-input" \n      name="' + this.$selector.data("name") + '"\n      ' + (void 0 != e.data("required") ? "required" : "") + ' \n      value=""\n      />\n    <div class="cropit-toolbar">\n      <input type="range" class="cropit-image-zoom-input" id="akcropit-izoom" data-parsley-ignore />\n    </div>\n    <button class="btn btn-success" id="akcropit-btnPilih" type="button">' + this.options.teksPilih + "</button>")
            }
        }, {
            key: "listenBtnPilih",
            value: function () {
                var e = this;
                this.$selector.find("#akcropit-btnPilih").on("click", function (t) {
                    e.$selector.find("#akcropit-ifile").click(), t.preventDefault()
                })
            }
        }, {
            key: "parseResponsiveBreakpoint",
            value: function () {
                var e = this;
                $.each(this.options.responsive, function (t, i) {
                    i = e.parseResponsiveValue(i), e.options.responsive[t] = i;
                    var o = null;
                    switch (t) {
                        case "xs":
                            o = "0";
                            break;
                        case "sm":
                            o = "540";
                            break;
                        case "md":
                            o = "720";
                            break;
                        case "lg":
                            o = "960";
                            break;
                        case "xl":
                            o = "1140"
                    }
                    o && (e.options.responsive[o] = i, delete e.options.responsive[t])
                })
            }
        }, {
            key: "parseResponsiveValue",
            value: function (e) {
                return "number" == typeof e && (e = {
                    width: this.options.width * e,
                    height: this.options.height * e
                }), e
            }
        }, {
            key: "listenResponsive",
            value: function () {
                $(window).on("resize", this.handleResponsive.bind(this)), $(window).trigger("resize")
            }
        }, {
            key: "handleResponsive",
            value: function (e) {
                var t = $(window).width(),
                    i = -1,
                    o = {
                        width: 0,
                        height: 0
                    };
                $.each(this.options.responsive, function (e) {
                    (e = Number(e)) <= t && e > i && (i = e)
                }), o = -1 == i ? {
                    width: this.options.width,
                    height: this.options.height
                } : {
                    width: this.options.responsive[i].width,
                    height: this.options.responsive[i].height
                }, null != this._currentSize && this._currentSize.width == o.width && this._currentSize.height == o.height || (this._currentSize = o, this.updatePreview())
            }
        }, {
            key: "updatePreview",
            value: function () {
                var e = this.$selector.cropit("imageSize"),
                    t = this.$selector.cropit("previewSize"),
                    i = this.$selector.find("#akcropit-izoom"),
                    o = i.val(),
                    n = this.$selector.cropit("offset"),
                    r = void 0;
                if (void 0 !== n && (r = {
                        x: n.x / (e.width * this._ratio - t.width),
                        y: n.y / (e.height * this._ratio - t.height)
                    }), this.$selector.cropit("previewSize", this._currentSize), this._ratio = this._currentSize.width / this.options.width, this.$selector.cropit("maxZoom", this._ratio), i.val(o), i.trigger("change"), void 0 !== n) {
                    e = this.$selector.cropit("imageSize"), t = this.$selector.cropit("previewSize");
                    var a = {
                            x: e.width * this._ratio - t.width,
                            y: e.height * this._ratio - t.height
                        },
                        s = {
                            x: a.x * r.x,
                            y: a.y * r.y
                        };
                    isNaN(s.x) && (s.x = 0), isNaN(s.y) && (s.y = 0), this.$selector.cropit("offset", s)
                }
            }
        }, {
            key: "getCropInfo",
            value: function () {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "object",
                    t = this.$selector.cropit("offset"),
                    i = this.$selector.cropit("imageSize"),
                    o = this.$selector.cropit("previewSize"),
                    n = this.$selector.cropit("zoom");
                if (void 0 !== t && i.width > 0 && i.height > 0) {
                    var r = Math.round(Math.abs(t.x) / n),
                        a = Math.round((Math.abs(t.x) + o.width) / n),
                        s = Math.round(Math.abs(t.y) / n),
                        l = {
                            x: r,
                            y: s,
                            width: a - r,
                            height: Math.round((Math.abs(t.y) + o.height) / n) - s,
                            zoom: n,
                            ratio: o.width / this.options.width
                        };
                    switch (e) {
                        case "object":
                            return l;
                        case "string":
                            return JSON.stringify(l)
                    }
                }
                return null
            }
        }]), e
    }();
    e.exports = o
}, function (e, t) {
    e.exports = function (e, t) {
        var i = {
            modalId: "#akModalAjax",
            size: null,
            zindex: 1050
        };
        if ($.extend(!0, i, e), !i.url) throw new Error("Mohon masukan URL yang ingin ditampilkan dalam modal");
        ! function (e) {
            if (0 == $(e).length) {
                $(document.body).prepend($('<div id="' + e.substring(1) + '" class="modal fade" tabindex="-1" role="dialog">\n  <div class="modal-dialog animate fade-up" role="document">\n    <div class="modal-loading fade-up" id="akModalLoading">\n      <i class="fa fa-spin fa-circle-o-notch"></i> Sedang Memuat\n    </div>\n    <div class="modal-content fade-up" id="akModalContent">\n    </div>\n  </div>\n</div>'));
                var t = $(e);
                t.on("hidden.bs.modal", function () {
                    t.find("#akModalContent").html(""), t.find("#akModalContent").fadeOut()
                })
            }
        }(i.modalId);
        var o = $(i.modalId);
        o.css("z-index", i.zindex), o.find(".modal-dialog").removeClass("modal-sm modal-lg"), i.size && o.find(".modal-dialog").addClass("modal-" + i.size);
        var n = o.find("#akModalLoading"),
            r = o.find("#akModalContent");
        o.modal("show"), n.fadeIn();
        var a = function (e, t, i) {
            if (n.fadeOut(), r.fadeIn(), "error" == t) {
                var a;
                try {
                    a = JSON.parse(e).pesan
                } catch (e) {}
                AKToast.error(a || "Terjadi kesalahan saat menampilkan modal"), o.modal("hide")
            }
        };
        i.data ? r.fadeOut().load(i.url, i.data, a) : r.fadeOut().load(i.url, a), o.one("hidden.bs.modal", t)
    }
}, function (e, t, i) {
    window.Parsley && (window.Parsley.addValidator("alphadash", i(8)), window.Parsley.addValidator("ip", i(9)), window.Parsley.addValidator("requiredWith", i(10)))
}, function (e, t) {
    var i = {
        requirementType: "string",
        messages: {
            id: "Hanya boleh berisi huruf, angka, dan strip."
        },
        validateString: function (e, t, i) {
            return "string" == typeof e && new RegExp("^(?:^[a-z0-9à-ü_-]+$)$", "i").test(e)
        }
    };
    e.exports = i
}, function (e, t) {
    e.exports = {
        requirementType: "string",
        messages: {
            id: "Harus berupa alamat IP yang valid."
        },
        validateString: function (e, t, i) {
            return /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(e) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(e)
        }
    }
}, function (e, t) {
    var i = {
        requirementType: "string",
        messages: {
            id: "Tidak boleh kosong"
        },
        validateString: function (e, t, i) {
            return !$(t).val() || /\S/.test(e)
        },
        priority: 512
    };
    e.exports = i
}, function (e, t) {}]);
